apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: get-aws-creds-workflow-template
spec:
  entrypoint: main
  arguments:
    parameters:
      - name: ecr_name
        value: "WorkflowTemplate default value"
      - name: worker_nodes_role_name
        value: "WorkflowTemplate default value"
      - name: default_region
        value: "WorkflowTemplate default value"
      - name: ecr_region
        value: "WorkflowTemplate default value"

  templates:
    - name: main
      steps:
        - - name: get-creds
            template: get-creds
        #- - name: build
        #    template: build
        #- - name: test
        #    template: test
    - name: get-creds
      container:
        image: public.ecr.aws/l8x8m8p8/aws-cli-git
        imagePullPolicy: IfNotPresent
        #workingDir: /app
        volumeMounts:
          - mountPath: ~/.aws
            name: aws-config
        command:
          - /bin/sh
          - -c
          - |-
            export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)

            ACCESS_KEY_ID=$(aws sts assume-role --role-arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/{{workflow.parameters.worker_nodes_role_name}} --role-session-name RoleSession --query 'Credentials.AccessKeyId')
            SECRET_ACCESS_KEY=$(aws sts assume-role --role-arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/{{workflow.parameters.worker_nodes_role_name}} --role-session-name RoleSession --query 'Credentials.SecretAccessKey')

            export PROFILE=workflow
            aws configure set aws_access_key_id $ACCESS_KEY_ID --profile $PROFILE
            aws configure set aws_secret_access_key $SECRET_ACCESS_KEY --profile $PROFILE
            aws configure set region "{{workflow.parameters.default_region}}" --profile $PROFILE
            aws configure set output "text" --profile $PROFILE

            # export AWS_DEFAULT_REGION="{{workflow.parameters.ecr_region}}"
            # echo $(aws ecr list-images --repository-name "{{workflow.parameters.ecr_name}}" \
            # --query 'sort_by(imageDetails,& imagePushedAt)[*].imageTags[0]' --output text \
            # | tail -n 3 | awk -F'- ' '{print $2}')

            sleep 40000

      #outputs:
        #parameters:
        #  - name: output-param-1
        #    valueFrom:
        #      path: /p1.txt
        #artifacts:
        #  - name: aws-config-file
        #    path: ~/.aws