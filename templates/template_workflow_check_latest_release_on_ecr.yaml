apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: check-latest-release-on-ecr-template
spec:
  entrypoint: main
  arguments:
    parameters:
      - name: ecr_arn
        value: "WorkflowTemplate default value"
      - name: worker_nodes_role_name
        value: "WorkflowTemplate default value"
      - name: region
        value: "WorkflowTemplate default value"
  templates:
    - name: main
      steps:
        - - name: get-creds
            template: get-creds
        #- - name: build
        #    template: build
        #- - name: test
        #    template: test
    - name: get-creds
      container:
        image: odaniait/aws-kubectl
        workingDir: /app
        command:
          - /bin/sh
          - -c
          - |-
            echo "{{workflow.parameters.ecr_arn}}"
            export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
            export AWS_ACCESS_KEY_ID=$(aws sts assume-role --role-arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/{{workflow.parameters.worker_nodes_role_name}} --role-session-name RoleSession --query 'Credentials.AccessKeyId')
            export AWS_SECRET_ACCESS_KEY=$(aws sts assume-role --role-arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/{{workflow.parameters.worker_nodes_role_name}} --role-session-name RoleSession --query 'Credentials.SecretAccessKey')
            
            export PROFILE=workflow
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile $PROFILE
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile $PROFILE
            aws configure set region "{{workflow.parameters.ecr_arn}}" --profile $PROFILE
            aws configure set output "text" --profile $PROFILE

            sleep 100000
        #command: [cowsay]
        #args: ["{{inputs.parameters.msg}}"]